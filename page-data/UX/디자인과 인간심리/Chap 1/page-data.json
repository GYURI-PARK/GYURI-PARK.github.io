{"componentChunkName":"component---src-templates-blog-template-js","path":"/UX/디자인과 인간심리/Chap 1/","result":{"data":{"cur":{"id":"6a586d1e-9355-57fd-a36c-52266ba2a6cc","html":"<ul>\n<li>좋은 디자인의 가장 중요한 특성 중 두 가지는 <code class=\"language-text\">발견 가능성</code>과 <code class=\"language-text\">이해</code></li>\n</ul>\n<h2 id=\"인간-중심-디자인\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EA%B0%84-%EC%A4%91%EC%8B%AC-%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"인간 중심 디자인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인간 중심 디자인</h2>\n<ul>\n<li>좋은 디자인은 기계로부터 인간으로의 좋은 의사소통이 필요하다. 어떤 행동이 가능하며, 무엇이 일어나고 있으며, 그리고 무엇이 일어날 것인지를 알려 주어야 하는 것이다.</li>\n</ul>","excerpt":"좋은 디자인의 가장 중요한 특성 중 두 가지는 과  인간 중심 디자인 좋은 디자인은 기계로부터 인간으로의 좋은 의사소통이 필요하다. 어떤 행동이 가능하며, 무엇이 일어나고 있으며, 그리고 무엇이 일어날 것인지를 알려 주어야 하는 것이다.","frontmatter":{"date":"May 29, 2023","title":"(디자인과 인간심리) 1장 생활용품의 정신병리학","categories":"UX","author":"박규리","emoji":"🎢"},"fields":{"slug":"/UX/디자인과 인간심리/Chap 1/"}},"next":{"id":"72df477d-91d5-59b8-bbf2-c307d9bc4f21","html":"<h2 id=\"-인-아웃-매개변수-in-out-parameter\" style=\"position:relative;\"><a href=\"#-%EC%9D%B8-%EC%95%84%EC%9B%83-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-in-out-parameter\" aria-label=\" 인 아웃 매개변수 in out parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 인-아웃 매개변수 (In-Out Parameter)</h2>\n<blockquote>\n<p>In-Out 파라미터란 ? ! </br></p>\n</blockquote>\n<p>Swift에서 <code class=\"language-text\">inout</code>은 함수의 매개변수 선언 앞에 사용되는 키워드로, 해당 매개변수가 <strong>함수에 전달된 변수에 대한 참조</strong>를 나타냅니다. </br></p>\n<p>이렇게 선언된 <code class=\"language-text\">inout</code> 매개변수는 <strong>함수 내에서 변수의 값을 변경</strong>할 수 있고, 변경된 값은 함수를 호출한 곳으로 다시 전달됩니다. </br></p>\n<p>이를 통해 함수 내부에서 변수의 값을 수정하고 그 결과를 <strong>함수 외부에서 사용</strong>할 수 있습니다. </br>\n</br></p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">swapValues</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> a<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span> b<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> a\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> temp\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token function\">swapValues</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"x: </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">x</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">, y: </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">y</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">// 출력: x: 5, y: 3</span></code></pre></div>\n</br>\n<ul>\n<li>swapValues함수는 inout 매개변수인 a와 b를 사용해 변수 x와 y의 값을 서로 바꿉니다.</li>\n<li>함수를 호출할 때 <code class=\"language-text\">&amp;</code>를 사용해 변수의 참조를 전달해야 합니다.</li>\n</ul>\n</br>\n</br>\n<h2 id=\"-why-\" style=\"position:relative;\"><a href=\"#-why-\" aria-label=\" why  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 Why ?</h2>\n<blockquote>\n<p>Swift에서 In-Out 매개변수는 왜 필요한가요 ? ! </br></p>\n</blockquote>\n<p>일반적으로 함수의 파라미터는 함수 내에서 지역 변수로 취급되며, 함수 내에서 변경된 값은 함수 외부에 영향을 미치지 않습니다. </br></p>\n<p>그러나 in-out 파라미터를 사용하면 <code class=\"language-text\">함수 내에서 해당 변수의 값을 직접 변경</code>할 수 있으며, 변경된 값이 <code class=\"language-text\">함수를 호출한 곳으로 다시 전달</code>됩니다. </br></br></p>\n<h2 id=\"-when-\" style=\"position:relative;\"><a href=\"#-when-\" aria-label=\" when  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 When ?</h2>\n<blockquote>\n<p>In-Out파라미터는 언제 유용하게 사용할 수 있을까 ? ! </br></p>\n</blockquote>\n<ol>\n<li>변수의 값을 함수 내에서 변경해야 하지만, 변경된 값을 함수 외부로 전달해야 하는 경우</li>\n</ol>\n<p>함수 내에서 변수의 값을 변경하여 계산 또는 수정하는 경우가 있을 수 있습니다. </br>\n그러나 해당 <code class=\"language-text\">변경된 값을 함수 외부에서도 사용해야 할 때</code>, in-out 파라미터를 사용하여 변수의 값을 변경하고 변경된 값을 함수 호출자에게 반환할 수 있습니다. </br>\n</br></p>\n<ol start=\"2\">\n<li>여러 개의 반환 값을 함수 외부로 전달해야 하는 경우</li>\n</ol>\n<p>일반적으로 함수는 하나의 값을 반환할 수 있습니다. </br>\n그러나 in-out 파라미터를 사용하면 <code class=\"language-text\">함수 외부로 여러 개의 값을 반환</code>할 수 있습니다. </br>\n함수 내에서 여러 개의 변수를 in-out 파라미터로 전달하여 그 값을 변경하고, 함수 호출자는 변경된 값을 가져올 수 있습니다.\n</br>\n</br></p>\n<ol start=\"3\">\n<li>함수 내부의 변수에 대한 참조 전달</li>\n</ol>\n<p>in-out 파라미터를 사용하면 함수 내부에서 <code class=\"language-text\">변수의 참조를 전달</code>할 수 있습니다.</br>\n이는 큰 데이터 구조를 복사하지 않고 함수 내부에서 직접 수정할 수 있는 장점을 제공합니다. </br>\n이는 성능 향상과 메모리 사용량 감소에 도움이 될 수 있습니다. </br>\n</br></p>\n<h2 id=\"-주의-사항\" style=\"position:relative;\"><a href=\"#-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\" 주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 주의 사항</h2>\n<ul>\n<li>inout 매개변수는 변수에 대한 참조를 전달하므로, 상수나 리터럴 값을 전달할 수 없습니다. <code class=\"language-text\">변수</code>만 전달할 수 있습니다.</li>\n<li>inout 매개변수는 원래의 변수와 동일한 타입을 가져야 합니다.</li>\n<li>함수를 호출할 때 <code class=\"language-text\">&amp;</code>를 사용하여 변수의 참조를 전달해야 합니다.</li>\n<li>inout 매개변수는 함수 내에서 변경되어야 하며, <code class=\"language-text\">초기값을 가질 수 없습니다.</code></li>\n</ul>\n</br>\n</br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%9D%B8-%EC%95%84%EC%9B%83-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-in-out-parameter\">💡 인-아웃 매개변수 (In-Out Parameter)</a></li>\n<li><a href=\"#-why-\">👀 Why ?</a></li>\n<li><a href=\"#-when-\">👀 When ?</a></li>\n<li><a href=\"#-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">💡 주의 사항</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 26, 2023","title":"In-Out 파라미터","categories":"Swift","author":"박규리","emoji":"🍙"},"fields":{"slug":"/swift/in-out/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://github.com/GYURI-PARK","comments":{"utterances":{"repo":"GYURI-PARK/blog-comment"}}}}},"pageContext":{"slug":"/UX/디자인과 인간심리/Chap 1/","nextSlug":"/swift/in-out/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}